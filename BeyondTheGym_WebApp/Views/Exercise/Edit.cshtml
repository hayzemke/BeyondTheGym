@using BTG.Models.ExerciseModels
@model ExerciseEdit

@{
    ViewData["Title"] = "Edit";

}

<h1> Edit Exercise </h1>

@*<h4> Exercise </h4>*@

@if (ViewData["ErrorMsg"] != null)
{
    <h4>@ViewData["ErrorMsg"] </h4>
}

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Instructions" class="control-label"></label>
                <input asp-for="Instructions" class="form-control" />
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SetsAndReps" class="control-label"></label>
                <input asp-for="SetsAndReps" class="form-control" />
                <span asp-validation-for="SetsAndReps" class="text-danger"></span>
            </div>

            <div class="form-group">
                <select asp-for="CategoryID" asp-items="@Model.CategoryListing" class="form-select">
                    <option selected disabled>--Select Category--</option>
                </select>
                <span asp-validation-for="CategoryID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index"> Back to List</a>
</div>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}
